@model Carpool.Models.RequestLift

@using (Html.BeginForm("RequestLiftPartialView", "Home", FormMethod.Post, new { id = "ID" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        <br />
        <h4>Request Lift</h4>
        <hr />
        <div class="col-md-5">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <p><b>Please enter request details based on route</b></p>
            <p><b>Get Directions below</b></p>
            <div class="form-group">
                @Html.LabelFor(model => model.StartPoint, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.StartPoint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartPoint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MeetingPoint, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.MeetingPoint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MeetingPoint, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndPoint, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.EndPoint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndPoint, "", new { @class = "text-danger" })
                </div>
            </div>
            </div>
        <div class="col-md-3">
            <br />
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.OutboundTime, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.OutboundTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OutboundTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InboundTime, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.InboundTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InboundTime, "", new { @class = "text-danger" })
                </div>
            </div>
            
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.DriverId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DriverId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DriverId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<style>
     .description{
        width:200px;
        height:100px;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDBthan2ga94Vh1GR8kSsUYwND2m5Ahk48&"></script>
    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDBthan2ga94Vh1GR8kSsUYwND2m5Ahk48&libraries=places"></script>
    <script>

            google.maps.event.addDomListener(window, 'load', function () {
                var options = {
                    types: ['(cities)'],
                    componentRestrictions: { country: "irl" }
                };

                var input = document.getElementById('StartPoint');
                var input2 = document.getElementById('EndPoint');
                var places = new google.maps.places.Autocomplete(input, options);
                var places2 = new google.maps.places.Autocomplete(input2, options);


            });
    </script>
}